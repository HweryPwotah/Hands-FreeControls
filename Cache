    static Mat recognize(Mat InputFrame) { 
//        variables
        Mat HSV_RoI = new Mat(InputFrame.size(), CvType.CV_8UC3);
        Mat Mask = new Mat(InputFrame.size(),CvType.CV_8UC1);
        Mat Hist = new Mat(InputFrame.size(),CvType.CV_8UC1);
        Mat BackProj = new Mat();

        RotatedRect curr_rect = new RotatedRect();
        Rect prev_rect = new Rect(58, 48, 58, 48);

//        org.opencv.core.Size size = new org.opencv.core.Size(250,250);
//        aInputFrame.size() = size;
//        Imgproc.resize(aInputFrame, aInputFrame, aInputFrame.size());//aInputFrame.size());

        //calculate Back Projection ===============================================================
        Imgproc.cvtColor(InputFrame, InputFrame, Imgproc.COLOR_RGBA2RGB);
        Imgproc.cvtColor(InputFrame, HSV_RoI, Imgproc.COLOR_RGB2HSV);

//        Core.inRange(HSV_RoI, new Scalar(0, 10, 60), new Scalar(20, 150, 255), Mask);
        Core.inRange(HSV_RoI, new Scalar(0, 60, 32), new Scalar(180, 256, 256), Mask);

//        Core.mixChannels(Arrays.asList(HSV_RoI), Arrays.asList(Mask), new MatOfInt(1));

        //calcHist function parameters explanation
        //(from http://opencv-java-tutorials.readthedocs.io/en/latest/04-opencv-basics.html)
//        Imgproc.calcHist(Arrays.asList(HSV_RoI), channels, Mask, Hist, histSize, ranges);
        Imgproc.calcHist(Arrays.asList(HSV_RoI), new MatOfInt(0), Mask, Hist, new MatOfInt(180), new MatOfFloat(0, 180));
        Core.normalize(Hist, Hist, 0, 255, Core.NORM_MINMAX);

        //calcBackProject( &hue, 1, 0, hist, backproj, &phranges, 1, true );
        Imgproc.calcBackProject(Arrays.asList(HSV_RoI), new MatOfInt(0), Hist, BackProj, new MatOfFloat(0, 180), 1);

        //MeanShift ===============================================================================
        //an algorithm to find modes in a set of data samples representing an underlying
        //probability density function

        curr_rect = Video.CamShift(BackProj, prev_rect, new TermCriteria(TermCriteria.EPS + TermCriteria.MAX_ITER, 10, 2));
        //current rectangle becomes previous rectangle.
        prev_rect = curr_rect.boundingRect();

        //draw a rectangle on face
        Imgproc.rectangle(InputFrame, new Point(prev_rect.x,
                        prev_rect.y), //Top Left
                new Point(prev_rect.x + prev_rect.width,
                        prev_rect.y + prev_rect.height), //Bottom Right
                new Scalar(255, 0, 0), 2);
//            Log.i(TAG, "Rectangle position is in (" + prev_rect.x + ", " + prev_rect.y + ")");

        return InputFrame;
    }
